---
import { type CollectionEntry, getCollection } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import FormattedDate from "../../components/FormattedDate.astro";

export async function getStaticPaths() {
  const posts = await getCollection("blog");
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: post,
  }));
}
type Props = CollectionEntry<"blog">;

const post = Astro.props;
const { Content } = await post.render();
---

<Layout {...post.data} description={post.data.description}>
  <div class="border-border relative border-dashed">
    <div class="grid-bg"></div>
    <div
      class="border-border relative z-20 border-x-2 border-dashed px-6 sm:mx-12"
    >
      <div class="prose dark:prose-invert mx-auto py-12">
        <div>
          <div>
            <FormattedDate date={post.data.pubDate} />
            {
              post.data.updatedDate && (
                <div>
                  Last updated on <FormattedDate date={post.data.updatedDate} />
                </div>
              )
            }
          </div>
          <h1 transition:name={post.data.title}>{post.data.title}</h1>
        </div>
      </div>
    </div>
  </div>

  <div class="border-border border-y-2 border-dashed">
    <div class="border-border border-x-2 border-dashed p-6 sm:mx-12">
      <div class="prose dark:prose-invert mx-auto py-12">
        <Content />
      </div>
    </div>
  </div>
</Layout>
