---
import { getCollection } from "astro:content";
import Layout from "../layouts/Layout.astro";
import { NAME } from "../consts";
const experience = await getCollection("experience");
const blogPosts = await getCollection("blog");
import TechLabel from "../components/TechLabel.astro";

import { Content as Intro } from "./intro.md";
import { Icon } from "astro-icon/components";

// Sort blog posts by publication date and get the latest two
const latestBlogPosts = blogPosts
  .sort(
    (a, b) =>
      new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime(),
  )
  .slice(0, 2);
---

<Layout
  title="Home"
  description="Fullstack web developer using NextJS and React."
>
  <div
    class="border-border relative items-center justify-center border-b-2 border-dashed"
  >
    <div class="grid-bg"></div>
    <div
      class="border-border relative z-20 flex min-h-[600px] flex-col items-center justify-center gap-10 border-x-2 border-dashed p-4 sm:mx-12 lg:flex-row"
    >
      <div class="max-w-[600px] px-4">
        <h1 class="text-foreground mb-4 text-6xl">{NAME}</h1>
        <p class="text-foreground/90 text-lg leading-loose">
          I'm a fullstack web developer currently working with Laravel and PHP
          professionally. In all my personal projects I primarily use NextJS and
          React.
        </p>
        <div class="mt-2">
          <a
            href="/project"
            class="bg-primary text-background inline-flex items-center gap-1 rounded-sm p-2 px-5"
            >Projects

            <Icon name="ic:outline-keyboard-arrow-right" class="size-6" />
          </a>
          <a
            href="/blog"
            class="border-border bg-background text-foreground inline-flex items-center rounded-sm border p-2 px-5"
            >Read My Blog
          </a>
        </div>
      </div>
      <div
        class="border-border hidden rounded-sm border-2 *:p-4 *:px-8 md:block"
      >
        <Intro />
      </div>
    </div>
  </div>

  <div
    class="border-border text-foreground relative z-30 border-b-2 border-dashed shadow-xs backdrop-blur-2xl sm:px-12"
  >
    <div class="border-border border-x-2 border-dashed p-8 sm:p-12 md:p-24">
      <div class="mx-auto max-w-[1000px]">
        <h2 class="text-2xl font-semibold">Work Experience</h2>
        <div class="mb-12"></div>

        {
          experience.map(async (exp) => {
            const { Content } = await exp.render();

            return (
              <div class="">
                <div class="flex flex-col sm:flex-row">
                  <div class="flex flex-1 gap-1">
                    <h3 class="mb-2 text-lg">
                      {exp.data.company}
                      <span class="font-semibold">- {exp.data.jobTitle}</span>
                    </h3>
                  </div>

                  <div class="text-foreground/90 inline-flex items-center justify-center gap-1 rounded-sm px-2 py-1 text-xs whitespace-nowrap">
                    {new Date(exp.data.startDate).toLocaleDateString("en-GB", {
                      month: "long",
                      year: "numeric",
                    })}
                    -
                    {exp.data.endDate
                      ? new Date(exp.data.endDate).toLocaleDateString("en-GB", {
                          month: "long",
                          year: "numeric",
                        })
                      : "Present"}
                    <Icon name="lucide:dot" />
                    <span
                      class="duration-span text-foreground text-xs whitespace-nowrap"
                      data-start={exp.data.startDate}
                      data-end={exp.data.endDate ? exp.data.endDate : null}
                    />
                  </div>
                </div>

                <div class="prose dark:prose-invert mt-4 max-w-full md:mt-0">
                  <Content />
                </div>

                <div class="mt-4 flex flex-wrap gap-2">
                  {exp.data.tech &&
                    exp.data.tech.map((tech) => <TechLabel tech={tech} />)}
                </div>
              </div>
            );
          })
        }
      </div>
    </div>
  </div>

  <div
    class="border-border text-foreground relative z-30 border-b-2 border-dashed shadow-xs backdrop-blur-2xl sm:px-12"
  >
    <div class="border-border border-x-2 border-dashed p-8 sm:p-12 md:p-24">
      <div class="mx-auto max-w-[1000px]">
        <h2 class="text-2xl font-semibold">Latest Blog Posts</h2>
        <div class="mb-12"></div>

        <div class="grid grid-cols-1 gap-4 lg:grid-cols-2">
          {
            latestBlogPosts.map((post) => (
              <div class="border-border mb-8 rounded-lg border p-5">
                <div class="mb-6 flex items-start gap-2">
                  <h3 class="grow text-xl font-semibold">
                    <a
                      href={`/blog/${post.slug}`}
                      class="underline-offset-4 hover:underline"
                    >
                      {post.data.title}
                    </a>
                  </h3>
                  <span class="border-border/70 text-primary/70 m-1 rounded-full border px-2 text-xs whitespace-nowrap">
                    {new Date(post.data.pubDate).toLocaleDateString("en-GB", {
                      day: "numeric",
                      month: "long",
                      year: "numeric",
                    })}
                  </span>
                </div>
                <p class="text-foreground/70 text-sm">
                  {post.data.description}
                </p>
                <a
                  href={`/blog/${post.slug}`}
                  class="text-primary mt-4 inline-flex items-center gap-1 underline-offset-4 hover:underline"
                >
                  Read more
                  <Icon name="lucide:arrow-right" />
                </a>
              </div>
            ))
          }
        </div>
      </div>
    </div>
  </div>

  <div
    class="border-border text-foreground relative z-30 border-b-2 border-dashed shadow-xs backdrop-blur-2xl sm:px-12"
  >
    <div class="border-border border-x-2 border-dashed p-8 sm:p-12 md:p-24">
      <div class="mx-auto max-w-[1000px]">
        <h2 class="text-2xl font-semibold">Contact</h2>
        <div class="mb-12"></div>
        <div class="grid grid-cols-1 gap-4 lg:grid-cols-2">
          <div>
            <h3 class="mb-4 text-xl">Contact Information</h3>
            <p>
              Feel free to reach out through any of the following channels. I'm
              open to discussing new projects, creative ideas, or opportunities
              to collaborate. Whether you have a question, a proposal, or just
              want to connect.
            </p>
          </div>
          <div class="flex flex-col gap-4">
            <a
              href="https://linkedin.com/in/jackhumes"
              target="_blank"
              class="border-border flex items-center gap-4 rounded-lg border p-4"
            >
              <div class="border-border rounded-full border p-4">
                <Icon name="lucide:linkedin" class="text-primary size-6" />
              </div>
              <div>
                <div class="text-lg font-semibold">LinkedIn</div>
                <div class="text-foreground/80">linkedin.com/in/jackhumes</div>
              </div>
            </a>
            <a
              href="mailto:contact@jackhumes.com"
              class="border-border flex items-center gap-4 rounded-lg border p-4"
            >
              <div class="border-border rounded-full border p-4">
                <Icon name="lucide:mail" class="text-primary size-6" />
              </div>
              <div>
                <div class="text-lg font-semibold">Email</div>
                <div class="text-foreground/80">contact@jackhumes.com</div>
              </div>
            </a>
            <a
              href="https://github.com/member87"
              target="_blank"
              class="border-border flex items-center gap-4 rounded-lg border p-4"
            >
              <div class="border-border rounded-full border p-4">
                <Icon name="lucide:github" class="text-primary size-6" />
              </div>
              <div>
                <div class="text-lg font-semibold">GitHub</div>
                <div class="text-foreground/80">github.com/member87</div>
              </div>
            </a>
          </div>
        </div>
      </div>
    </div>
  </div>
</Layout>

<script is:inline>
  // Client-side function to calculate the duration between two dates
  const calculateDuration = (start, end) => {
    const totalMonths =
      (end.getTime() - start.getTime()) / (1000 * 60 * 60 * 24 * 30);

    const years = Math.floor(totalMonths / 12);
    const months = Math.round(totalMonths % 12);

    if (years > 0) {
      return `${years} yr${years > 1 ? "s" : ""}, ${months} mo${months !== 1 ? "s" : ""}`;
    }
    return `${months} mo${months !== 1 ? "s" : ""}`;
  };

  // Run this code after the page is fully loaded
  document.addEventListener("astro:page-load", (e) => {
    // Get all elements with the class 'duration-span'
    const durationElements = document.querySelectorAll(".duration-span");

    // For each span element, calculate and update the duration
    durationElements.forEach((el) => {
      const startDate = new Date(el.getAttribute("data-start"));
      const endDate = el.getAttribute("data-end")
        ? new Date(el.getAttribute("data-end"))
        : new Date();
      const duration = calculateDuration(startDate, endDate);
      el.textContent = duration;
    });
  });
</script>
